name: Deploy to Cloud Run

on:
  push:
    branches: [ main ]
    paths:
      - 'src/**'
      - 'Dockerfile'
      - 'pyproject.toml'
      - 'uv.lock'
  workflow_dispatch:
    inputs:
      force_deploy:
        description: 'Force deployment'
        required: false
        default: false
        type: boolean

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  GAR_LOCATION: asia-northeast1
  SERVICE: gmail-calendar-sync
  REGION: asia-northeast1

jobs:
  deploy:
    permissions:
      contents: read
      id-token: write

    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Google Auth
        id: auth
        uses: 'google-github-actions/auth@v2'
        with:
          credentials_json: '${{ secrets.GCP_SA_KEY }}'

      - name: Set up Cloud SDK
        uses: 'google-github-actions/setup-gcloud@v2'

      - name: Configure Docker to use gcloud as credential helper
        run: |
          gcloud auth configure-docker $GAR_LOCATION-docker.pkg.dev

      - name: Build and Push Container
        run: |
          docker build -t "$GAR_LOCATION-docker.pkg.dev/$PROJECT_ID/$SERVICE/$SERVICE:$GITHUB_SHA" ./
          docker push "$GAR_LOCATION-docker.pkg.dev/$PROJECT_ID/$SERVICE/$SERVICE:$GITHUB_SHA"

      - name: Deploy to Cloud Run
        id: deploy
        uses: google-github-actions/deploy-cloudrun@v2
        with:
          service: ${{ env.SERVICE }}
          region: ${{ env.REGION }}
          image: ${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.SERVICE }}/${{ env.SERVICE }}:${{ github.sha }}
          flags: |
            --no-allow-unauthenticated
            --memory=512Mi
            --cpu=1
            --timeout=900
            --concurrency=1
            --max-instances=1
            --service-account=${{ secrets.GCP_SERVICE_ACCOUNT_EMAIL }}
          env_vars: |
            LOG_LEVEL=INFO
            SYNC_PERIOD_HOURS=8
          secrets: |
            GOOGLE_CLIENT_ID=${{ secrets.GOOGLE_CLIENT_ID }}:latest
            GOOGLE_CLIENT_SECRET=${{ secrets.GOOGLE_CLIENT_SECRET }}:latest
            GOOGLE_REFRESH_TOKEN=${{ secrets.GOOGLE_REFRESH_TOKEN }}:latest
            OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}:latest
            SLACK_WEBHOOK_URL=${{ secrets.SLACK_WEBHOOK_URL }}:latest

      - name: Show Output
        run: echo ${{ steps.deploy.outputs.url }}
