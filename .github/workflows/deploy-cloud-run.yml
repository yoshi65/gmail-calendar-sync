name: Deploy to Cloud Run Jobs

on:
  push:
    branches: [ main ]
    paths:
      - 'src/**'
      - 'Dockerfile'
      - 'pyproject.toml'
      - 'uv.lock'
      - 'cloudbuild.yaml'
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Google Auth
        id: auth
        uses: 'google-github-actions/auth@v2'
        with:
          credentials_json: '${{ secrets.GCP_SA_KEY }}'

      - name: Set up Cloud SDK
        uses: 'google-github-actions/setup-gcloud@v2'

      - name: Deploy using Cloud Build
        id: deploy
        run: |
          SERVICE_ACCOUNT_EMAIL=$(echo "$GCP_SA_KEY" | jq -r '.client_email')
          gcloud builds submit --config cloudbuild.yaml --substitutions SHORT_SHA=${GITHUB_SHA:0:7},_SERVICE_ACCOUNT_EMAIL=$SERVICE_ACCOUNT_EMAIL .
          echo "deployment_time=$(date -u +%Y-%m-%dT%H:%M:%SZ)" >> $GITHUB_OUTPUT
        env:
          GCP_SA_KEY: ${{ secrets.GCP_SA_KEY }}

      - name: Verify deployment health
        run: |
          echo "## üöÄ Deployment Health Check" >> $GITHUB_STEP_SUMMARY
          echo "### Deployment Details" >> $GITHUB_STEP_SUMMARY
          echo "- üìÖ Deployed at: ${{ steps.deploy.outputs.deployment_time }}" >> $GITHUB_STEP_SUMMARY
          echo "- üìã Commit SHA: ${GITHUB_SHA:0:7}" >> $GITHUB_STEP_SUMMARY
          echo "- üåø Branch: ${GITHUB_REF_NAME}" >> $GITHUB_STEP_SUMMARY

          # Check if the Cloud Run job exists and is ready
          JOB_NAME="gmail-calendar-sync"
          REGION="asia-northeast1"

          echo "### Service Health" >> $GITHUB_STEP_SUMMARY
          if gcloud run jobs describe $JOB_NAME --region=$REGION --quiet > /dev/null 2>&1; then
            echo "- ‚úÖ Cloud Run job exists and is accessible" >> $GITHUB_STEP_SUMMARY

            # Get job details
            LATEST_IMAGE=$(gcloud run jobs describe $JOB_NAME --region=$REGION --format="value(spec.template.spec.template.spec.containers[0].image)" 2>/dev/null || echo "N/A")
            echo "- üñºÔ∏è  Latest image: $LATEST_IMAGE" >> $GITHUB_STEP_SUMMARY

            # Check if image contains our commit SHA
            if echo "$LATEST_IMAGE" | grep -q "${GITHUB_SHA:0:7}"; then
              echo "- ‚úÖ Deployment contains expected commit SHA" >> $GITHUB_STEP_SUMMARY
            else
              echo "- ‚ö†Ô∏è  Deployment may not contain expected commit SHA" >> $GITHUB_STEP_SUMMARY
            fi
          else
            echo "- ‚ùå Cloud Run job not found or not accessible" >> $GITHUB_STEP_SUMMARY
          fi

      - name: Send deployment notification
        if: always()
        run: |
          SLACK_WEBHOOK="${{ secrets.SLACK_WEBHOOK_URL }}"
          if [ -n "$SLACK_WEBHOOK" ]; then
            DEPLOYMENT_STATUS="${{ job.status }}"
            EMOJI="üöÄ"
            if [ "$DEPLOYMENT_STATUS" != "success" ]; then
              EMOJI="‚ùå"
            fi

            curl -X POST -H 'Content-type: application/json' \
              --data "{
                \"text\": \"$EMOJI *Gmail Calendar Sync Deployment*\",
                \"attachments\": [{
                  \"color\": \"$([ '$DEPLOYMENT_STATUS' = 'success' ] && echo 'good' || echo 'danger')\",
                  \"fields\": [
                    {\"title\": \"Status\", \"value\": \"$DEPLOYMENT_STATUS\", \"short\": true},
                    {\"title\": \"Commit\", \"value\": \"${GITHUB_SHA:0:7}\", \"short\": true},
                    {\"title\": \"Branch\", \"value\": \"${GITHUB_REF_NAME}\", \"short\": true},
                    {\"title\": \"Deployed at\", \"value\": \"${{ steps.deploy.outputs.deployment_time }}\", \"short\": true}
                  ]
                }]
              }" \
              $SLACK_WEBHOOK || echo "Failed to send Slack notification"
          else
            echo "Slack webhook not configured, skipping notification"
          fi
