name: CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Install uv
      uses: astral-sh/setup-uv@v3
      with:
        version: "latest"

    - name: Set up Python 3.13
      run: uv python install 3.13

    - name: Cache uv dependencies
      uses: actions/cache@v4
      with:
        path: ~/.cache/uv
        key: ${{ runner.os }}-uv-${{ hashFiles('**/uv.lock') }}
        restore-keys: |
          ${{ runner.os }}-uv-

    - name: Install dependencies
      run: uv sync --all-extras

    - name: Run ruff linting
      run: uv run ruff check src/ tests/

    - name: Run ruff formatting check
      run: uv run ruff format src/ tests/ --check

    - name: Run mypy type checking
      run: uv run mypy src/

    - name: Run tests with coverage
      run: uv run pytest tests/ -v --tb=short --cov=src --cov-report=xml --cov-report=term-missing

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      with:
        file: ./coverage.xml
        fail_ci_if_error: false

    - name: Quality gate analysis
      run: |
        echo "## ðŸ“Š Code Quality Report" >> $GITHUB_STEP_SUMMARY
        echo "### Quality Checks" >> $GITHUB_STEP_SUMMARY
        echo "- âœ… Linting (ruff) passed" >> $GITHUB_STEP_SUMMARY
        echo "- âœ… Code formatting (ruff) passed" >> $GITHUB_STEP_SUMMARY
        echo "- âœ… Type checking (mypy) passed" >> $GITHUB_STEP_SUMMARY
        echo "- âœ… Tests passed" >> $GITHUB_STEP_SUMMARY
        echo "### Coverage Status" >> $GITHUB_STEP_SUMMARY
        if [ -f coverage.xml ]; then
          coverage=$(python3 -c "
          import xml.etree.ElementTree as ET
          try:
              tree = ET.parse('coverage.xml')
              coverage = tree.getroot().attrib['line-rate']
              print(f'{float(coverage)*100:.1f}%')
          except:
              print('N/A')
          " 2>/dev/null || echo "N/A")
          echo "- ðŸ“ˆ Test Coverage: $coverage" >> $GITHUB_STEP_SUMMARY
        else
          echo "- ðŸ“ˆ Test Coverage: N/A" >> $GITHUB_STEP_SUMMARY
        fi
        echo "### Quality Gates" >> $GITHUB_STEP_SUMMARY
        echo "- ðŸšª All quality gates passed âœ…" >> $GITHUB_STEP_SUMMARY
