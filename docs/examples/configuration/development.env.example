# 開発環境設定例
# Development Environment Configuration

# =============================================================================
# Gmail API Settings (必須)
# =============================================================================
GMAIL_CLIENT_ID=123456789-abc123def456ghi789jkl012mno345pqr.apps.googleusercontent.com
GMAIL_CLIENT_SECRET=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3456
GMAIL_REFRESH_TOKEN=1//0Gw5xxx-yyy_zzz_aaa_bbb_ccc_ddd_eee_fff_ggg

# =============================================================================
# Google Calendar API Settings (必須)
# =============================================================================
CALENDAR_CLIENT_ID=123456789-abc123def456ghi789jkl012mno345pqr.apps.googleusercontent.com
CALENDAR_CLIENT_SECRET=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3456
CALENDAR_REFRESH_TOKEN=1//0Gw5xxx-yyy_zzz_aaa_bbb_ccc_ddd_eee_fff_ggg

# =============================================================================
# OpenAI API Settings (必須)
# =============================================================================
OPENAI_API_KEY=sk-proj-abcd1234efgh5678ijkl9012mnop3456qrst7890uvwx

# =============================================================================
# 開発・デバッグ設定
# =============================================================================

# 同期期間設定（開発用：短期間）
SYNC_PERIOD_HOURS=1                    # 直近1時間のメールのみ
# SYNC_PERIOD_DAYS=7                   # 後方互換性（日単位指定）

# ログ設定（詳細出力）
LOG_LEVEL=DEBUG                        # 開発時は DEBUG で詳細確認

# Gmail ラベル（テスト用）
GMAIL_LABEL=DEV_PROCESSED_BY_GMAIL_SYNC

# =============================================================================
# 開発用通知設定（オプション）
# =============================================================================

# Slack 通知（開発チャンネル）
# SLACK_WEBHOOK_URL=https://hooks.slack.com/services/T00000000/B00000000/XXXXXXXXXXXXXXXXXXXXXXXX

# =============================================================================
# テスト・デバッグ用設定
# =============================================================================

# 特定期間のテスト処理
# SYNC_START_DATE=2024-01-01           # 開始日指定
# SYNC_END_DATE=2024-01-31             # 終了日指定

# 単一日のテスト
# SYNC_START_DATE=2024-01-15
# SYNC_END_DATE=2024-01-15

# 最新メールのみテスト（推奨）
# SYNC_PERIOD_HOURS=1
# LOG_LEVEL=DEBUG

# =============================================================================
# 開発ツール設定
# =============================================================================

# Pre-commit hooks（自動品質チェック）
# uv run pre-commit install
# uv run pre-commit run --all-files

# テスト実行
# uv run pytest -v
# uv run pytest --cov=src --cov-report=term-missing

# 型チェック
# uv run mypy src/

# フォーマット・リンター
# uv run ruff check src/ --fix
# uv run ruff format src/

# =============================================================================
# クリーンアップ機能（開発・テスト時のみ）
# =============================================================================

# テスト用クリーンアップスクリプト
# ⚠️ 重要: 本番環境では絶対に実行しないでください
# uv run python cleanup_for_test.py

# 削除される内容:
# - 処理済みラベル (DEV_PROCESSED_BY_GMAIL_SYNC)
# - 作成されたカレンダー予定 (gmail-calendar-sync作成分)

# =============================================================================
# 開発環境でのパフォーマンステスト
# =============================================================================

# ベンチマークテスト
# uv run pytest tests/test_performance.py -v --benchmark-only

# メモリ使用量確認
# uv run python -m memory_profiler src/main.py

# OpenAI API使用量追跡（開発時）
# - 自動的にトークン数・コストを追跡
# - ログ出力で確認可能

# =============================================================================
# IDEサポート設定
# =============================================================================

# Python インタープリター
# .python-version ファイルで Python 3.13 指定

# VS Code 推奨拡張機能
# - Python
# - Pylance
# - Ruff
# - mypy

# PyCharm 設定
# - Python インタープリター: uv管理の仮想環境
# - Code style: ruff設定に従う

# =============================================================================
# Git フック設定
# =============================================================================

# Pre-commit による自動品質チェック
# コミット前に以下が自動実行:
# - ruff format（フォーマット）
# - ruff check（リンター）
# - mypy（型チェック）
# - 一般的なファイルチェック

# =============================================================================
# デバッグコマンド例
# =============================================================================

# 基本デバッグ実行
# LOG_LEVEL=DEBUG SYNC_PERIOD_HOURS=1 uv run python src/main.py

# 特定メールドメインのみテスト
# LOG_LEVEL=DEBUG SYNC_PERIOD_HOURS=24 uv run python src/main.py

# 日付範囲指定でのデバッグ
# SYNC_START_DATE=2024-01-01 SYNC_END_DATE=2024-01-02 LOG_LEVEL=DEBUG uv run python src/main.py

# Slack通知なしでテスト
# unset SLACK_WEBHOOK_URL && LOG_LEVEL=DEBUG SYNC_PERIOD_HOURS=1 uv run python src/main.py
